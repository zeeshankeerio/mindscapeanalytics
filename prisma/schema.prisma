generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          Role      @default(USER)
  profile       Profile?
  analytics     Analytics[]
  predictions   Prediction[]
  nlpResults    NLPResult[]
  visionResults VisionResult[]
}

model Profile {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  avatar      String?
  bio         String?
  company     String?
  position    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Analytics {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  type      String
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Prediction {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  model       String
  input       Json
  output      Json
  confidence  Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model NLPResult {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  text        String
  sentiment   String?
  entities    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VisionResult {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  imageUrl    String
  labels      Json?
  objects     Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
} 